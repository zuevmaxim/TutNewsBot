services:
  db:
    image: postgres:latest
    container_name: postgres-bot
    restart: always
    user: ${POSTGRES_USER}
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    volumes:
      # to persist data
      - db:/var/lib/postgresql/data
      # copy the sql script to create tables
      - ./storage/schema/bot.sql:/docker-entrypoint-initdb.d/create_tables.sql
  bot:
    container_name: tutnews-bot
    image: python:3.9
    restart: unless-stopped
    depends_on:
      - db
    volumes:
      - .:/app
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_HOST=db
      - BOT_TOKEN=${BOT_TOKEN}
      - API_HASH=${API_HASH}
      - API_ID=${API_ID}
      - SCROLLING_TIMEOUT_MIN=${SCROLLING_TIMEOUT_MIN}
      - PYTHONPATH=/app
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LOG_USER_ID=${LOG_USER_ID}
    working_dir: /app
    command: >
      sh -c "
      pip install -r requirements.txt &&
      python bot/main.py
      "
volumes:
  db:
    driver: local